version: '2'

services:
  mongo:
    container_name: "mongo"
    image: mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - kafka-net

  zookeeper:
    container_name: "zookeeper"
    image: wurstmeister/zookeeper:3.4.6
    ports:
     - "2181:2181"
    networks:
      - kafka-net
    restart: unless-stopped
     
  kafka:
    image: wurstmeister/kafka
    container_name: "kafka"
    ports:
     - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "kafka"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test:1:1"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - kafka-net
    restart: unless-stopped

  app:
    container_name: app
    build: .
    command: tail -f /dev/null
    environment:
      MONGO-HOST: mongo
      MONGO-PORT: 27017
      MONGO-USERNAME: root
      MONGO-PASSWORD: example
      KAFKA-SERVER: "kafka:9092"
    depends_on:
      - kafka
      - zookeeper
      - mongo
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge